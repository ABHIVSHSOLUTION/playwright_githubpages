{"ast":null,"code":"import { apiSlice } from \"../../app/api\";\nimport { createEntityAdapter } from \"@reduxjs/toolkit\";\nconst policyAdapter = createEntityAdapter();\nexport const initialState = policyAdapter.getInitialState({\n  tableHeader: [\"Id \", \"Policy Name\", \"Amount\", \"Max Limit\", \"Actions\"],\n  policy: [],\n  selectedPolicy: {},\n  operation: \"Add\",\n  status: \"policy\"\n});\nexport const policyApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    getPolicy: builder.query({\n      query: () => \"/policies\",\n      transformResponse: res => {\n        return policyAdapter.setAll(initialState, res);\n      },\n      providesTags: [\"Policy\"]\n    }),\n    addPolicy: builder.mutation({\n      query: data => ({\n        url: \"/policies/add\",\n        method: \"POST\",\n        body: data\n      }),\n      invalidatesTags: [{\n        type: \"Policy\"\n      }]\n    }),\n    deletePolicy: builder.mutation({\n      query: id => ({\n        url: `/policies/${id}/delete`,\n        method: \"POST\"\n      }),\n      invalidatesTags: [{\n        type: \"Policy\"\n      }]\n    }),\n    updatepolicy: builder.mutation({\n      query: obj => ({\n        url: `/policies/update`,\n        method: \"PUT\",\n        body: obj\n      }),\n      invalidatesTags: [{\n        type: \"Policy\"\n      }]\n    })\n  })\n});\nexport const {\n  useGetPolicyQuery,\n  useAddPolicyMutation,\n  useDeletePolicyMutation,\n  useUpdatepolicyMutation\n} = policyApiSlice;","map":{"version":3,"names":["apiSlice","createEntityAdapter","policyAdapter","initialState","getInitialState","tableHeader","policy","selectedPolicy","operation","status","policyApiSlice","injectEndpoints","endpoints","builder","getPolicy","query","transformResponse","res","setAll","providesTags","addPolicy","mutation","data","url","method","body","invalidatesTags","type","deletePolicy","id","updatepolicy","obj","useGetPolicyQuery","useAddPolicyMutation","useDeletePolicyMutation","useUpdatepolicyMutation"],"sources":["/home/abhi/VSH/playwright-poc/src/components/policy/policyApiSlice.js"],"sourcesContent":["import { apiSlice } from \"../../app/api\";\nimport { createEntityAdapter } from \"@reduxjs/toolkit\";\n\n\nconst policyAdapter = createEntityAdapter();\n\nexport const initialState = policyAdapter.getInitialState({\n  tableHeader: [\"Id \", \"Policy Name\", \"Amount\", \"Max Limit\", \"Actions\"],\n  policy: [],\n  selectedPolicy: {},\n  operation: \"Add\",\n  status: \"policy\",\n});\n\nexport const policyApiSlice = apiSlice.injectEndpoints({\n    endpoints: (builder) => ({\n        getPolicy: builder.query({\n            query: () => \"/policies\",\n            transformResponse: (res) => {\n            return policyAdapter.setAll(initialState, res)\n            },\n            providesTags : [\"Policy\"]\n        }),\n        addPolicy: builder.mutation({\n            query: (data) => ({\n                url: \"/policies/add\",\n                method: \"POST\",\n                body: data,\n            \n            }),\n            invalidatesTags: [{type:\"Policy\"}]\n\n        }),       deletePolicy: builder.mutation({\n            query: (id) => ({\n              url: `/policies/${id}/delete`,\n              method: \"POST\",\n              \n            }),\n            invalidatesTags: [{ type: \"Policy\" }],\n        }),\n        updatepolicy: builder.mutation({\n            query: (obj) => ({\n              url: `/policies/update`,\n                method: \"PUT\",\n              body : obj\n              \n            }),\n            invalidatesTags: [{ type: \"Policy\" }],\n          })\n       \n    })\n})\n\nexport const { useGetPolicyQuery  , useAddPolicyMutation , useDeletePolicyMutation ,useUpdatepolicyMutation} = policyApiSlice;"],"mappings":"AAAA,SAASA,QAAT,QAAyB,eAAzB;AACA,SAASC,mBAAT,QAAoC,kBAApC;AAGA,MAAMC,aAAa,GAAGD,mBAAmB,EAAzC;AAEA,OAAO,MAAME,YAAY,GAAGD,aAAa,CAACE,eAAd,CAA8B;EACxDC,WAAW,EAAE,CAAC,KAAD,EAAQ,aAAR,EAAuB,QAAvB,EAAiC,WAAjC,EAA8C,SAA9C,CAD2C;EAExDC,MAAM,EAAE,EAFgD;EAGxDC,cAAc,EAAE,EAHwC;EAIxDC,SAAS,EAAE,KAJ6C;EAKxDC,MAAM,EAAE;AALgD,CAA9B,CAArB;AAQP,OAAO,MAAMC,cAAc,GAAGV,QAAQ,CAACW,eAAT,CAAyB;EACnDC,SAAS,EAAGC,OAAD,KAAc;IACrBC,SAAS,EAAED,OAAO,CAACE,KAAR,CAAc;MACrBA,KAAK,EAAE,MAAM,WADQ;MAErBC,iBAAiB,EAAGC,GAAD,IAAS;QAC5B,OAAOf,aAAa,CAACgB,MAAd,CAAqBf,YAArB,EAAmCc,GAAnC,CAAP;MACC,CAJoB;MAKrBE,YAAY,EAAG,CAAC,QAAD;IALM,CAAd,CADU;IAQrBC,SAAS,EAAEP,OAAO,CAACQ,QAAR,CAAiB;MACxBN,KAAK,EAAGO,IAAD,KAAW;QACdC,GAAG,EAAE,eADS;QAEdC,MAAM,EAAE,MAFM;QAGdC,IAAI,EAAEH;MAHQ,CAAX,CADiB;MAOxBI,eAAe,EAAE,CAAC;QAACC,IAAI,EAAC;MAAN,CAAD;IAPO,CAAjB,CARU;IAiBXC,YAAY,EAAEf,OAAO,CAACQ,QAAR,CAAiB;MACrCN,KAAK,EAAGc,EAAD,KAAS;QACdN,GAAG,EAAG,aAAYM,EAAG,SADP;QAEdL,MAAM,EAAE;MAFM,CAAT,CAD8B;MAMrCE,eAAe,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAR,CAAD;IANoB,CAAjB,CAjBH;IAyBrBG,YAAY,EAAEjB,OAAO,CAACQ,QAAR,CAAiB;MAC3BN,KAAK,EAAGgB,GAAD,KAAU;QACfR,GAAG,EAAG,kBADS;QAEbC,MAAM,EAAE,KAFK;QAGfC,IAAI,EAAGM;MAHQ,CAAV,CADoB;MAO3BL,eAAe,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAR,CAAD;IAPU,CAAjB;EAzBO,CAAd;AADwC,CAAzB,CAAvB;AAuCP,OAAO,MAAM;EAAEK,iBAAF;EAAuBC,oBAAvB;EAA8CC,uBAA9C;EAAuEC;AAAvE,IAAkGzB,cAAxG"},"metadata":{},"sourceType":"module"}