{"ast":null,"code":"import { createEntityAdapter } from \"@reduxjs/toolkit\";\nimport { apiSlice } from \"../../app/api\";\nconst userAdapter = createEntityAdapter();\nexport const initialState = userAdapter.getInitialState({\n  tableHeader: [\"Id \", \"Name\", \"Email\", \"Actions\"],\n  users: [],\n  selectedUser: {},\n  operation: \"Add\",\n  status: \"user\"\n});\nexport const userApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    getUsers: builder.query({\n      query: () => \"/users\",\n      transformResponse: response => {\n        return userAdapter.setAll(initialState, response);\n      },\n      providesTags: [\"User\"]\n    }),\n    addUser: builder.mutation({\n      query: data => ({\n        url: \"/users/add\",\n        method: \"POST\",\n        body: data\n      }),\n      invalidatesTags: [{\n        type: \"User\"\n      }]\n    }),\n    deleteUser: builder.mutation({\n      query: id => ({\n        url: `users/${id}/delete`,\n        method: \"DELETE\"\n      }),\n      invalidatesTags: [{\n        type: \"User\"\n      }]\n    }),\n    updateUser: builder.mutation({\n      query: _ref => {\n        let {\n          id,\n          ...obj\n        } = _ref;\n        return {\n          url: `users/update/${id}`,\n          method: \"PUT\",\n          body: obj\n        };\n      },\n      invalidatesTags: [{\n        type: \"User\"\n      }]\n    })\n  })\n});\nexport const {\n  useGetUsersQuery,\n  useAddUserMutation,\n  useDeleteUserMutation,\n  useUpdateUserMutation\n} = userApiSlice;","map":{"version":3,"names":["createEntityAdapter","apiSlice","userAdapter","initialState","getInitialState","tableHeader","users","selectedUser","operation","status","userApiSlice","injectEndpoints","endpoints","builder","getUsers","query","transformResponse","response","setAll","providesTags","addUser","mutation","data","url","method","body","invalidatesTags","type","deleteUser","id","updateUser","obj","useGetUsersQuery","useAddUserMutation","useDeleteUserMutation","useUpdateUserMutation"],"sources":["/home/abhi/VSH/playwright-poc/src/components/user/userApiSlice.js"],"sourcesContent":["import { createEntityAdapter } from \"@reduxjs/toolkit\";\nimport { apiSlice } from \"../../app/api\";\n\nconst userAdapter = createEntityAdapter();\n\nexport const initialState = userAdapter.getInitialState({\n  tableHeader: [\"Id \", \"Name\", \"Email\", \"Actions\"],\n  users: [],\n  selectedUser: {},\n  operation: \"Add\",\n  status: \"user\",\n});\n\nexport const userApiSlice = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    getUsers: builder.query({\n      query: () => \"/users\",\n      transformResponse: (response) => {\n        return userAdapter.setAll(initialState, response);\n      },\n      providesTags: [\"User\"],\n    }),\n    addUser: builder.mutation({\n      query: (data) => ({\n        url: \"/users/add\",\n        method: \"POST\",\n        body: data,\n      }),\n      invalidatesTags: [{ type: \"User\" }],\n    }),\n    deleteUser: builder.mutation({\n      query: (id) => ({\n        url: `users/${id}/delete`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [{ type: \"User\" }],\n    }),\n\n    updateUser: builder.mutation({\n      query: ({ id, ...obj }) => ({\n        url: `users/update/${id}`,\n        method: \"PUT\",\n        body: obj,\n      }),\n      invalidatesTags: [{ type: \"User\" }],\n    }),\n  }),\n});\nexport const {\n  useGetUsersQuery,\n  useAddUserMutation,\n  useDeleteUserMutation,\n  useUpdateUserMutation,\n} = userApiSlice;\n"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,kBAApC;AACA,SAASC,QAAT,QAAyB,eAAzB;AAEA,MAAMC,WAAW,GAAGF,mBAAmB,EAAvC;AAEA,OAAO,MAAMG,YAAY,GAAGD,WAAW,CAACE,eAAZ,CAA4B;EACtDC,WAAW,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,OAAhB,EAAyB,SAAzB,CADyC;EAEtDC,KAAK,EAAE,EAF+C;EAGtDC,YAAY,EAAE,EAHwC;EAItDC,SAAS,EAAE,KAJ2C;EAKtDC,MAAM,EAAE;AAL8C,CAA5B,CAArB;AAQP,OAAO,MAAMC,YAAY,GAAGT,QAAQ,CAACU,eAAT,CAAyB;EACnDC,SAAS,EAAGC,OAAD,KAAc;IACvBC,QAAQ,EAAED,OAAO,CAACE,KAAR,CAAc;MACtBA,KAAK,EAAE,MAAM,QADS;MAEtBC,iBAAiB,EAAGC,QAAD,IAAc;QAC/B,OAAOf,WAAW,CAACgB,MAAZ,CAAmBf,YAAnB,EAAiCc,QAAjC,CAAP;MACD,CAJqB;MAKtBE,YAAY,EAAE,CAAC,MAAD;IALQ,CAAd,CADa;IAQvBC,OAAO,EAAEP,OAAO,CAACQ,QAAR,CAAiB;MACxBN,KAAK,EAAGO,IAAD,KAAW;QAChBC,GAAG,EAAE,YADW;QAEhBC,MAAM,EAAE,MAFQ;QAGhBC,IAAI,EAAEH;MAHU,CAAX,CADiB;MAMxBI,eAAe,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAR,CAAD;IANO,CAAjB,CARc;IAgBvBC,UAAU,EAAEf,OAAO,CAACQ,QAAR,CAAiB;MAC3BN,KAAK,EAAGc,EAAD,KAAS;QACdN,GAAG,EAAG,SAAQM,EAAG,SADH;QAEdL,MAAM,EAAE;MAFM,CAAT,CADoB;MAK3BE,eAAe,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAR,CAAD;IALU,CAAjB,CAhBW;IAwBvBG,UAAU,EAAEjB,OAAO,CAACQ,QAAR,CAAiB;MAC3BN,KAAK,EAAE;QAAA,IAAC;UAAEc,EAAF;UAAM,GAAGE;QAAT,CAAD;QAAA,OAAqB;UAC1BR,GAAG,EAAG,gBAAeM,EAAG,EADE;UAE1BL,MAAM,EAAE,KAFkB;UAG1BC,IAAI,EAAEM;QAHoB,CAArB;MAAA,CADoB;MAM3BL,eAAe,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAR,CAAD;IANU,CAAjB;EAxBW,CAAd;AADwC,CAAzB,CAArB;AAmCP,OAAO,MAAM;EACXK,gBADW;EAEXC,kBAFW;EAGXC,qBAHW;EAIXC;AAJW,IAKTzB,YALG"},"metadata":{},"sourceType":"module"}